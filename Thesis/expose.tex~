\documentclass[10pt,a4wide]{article}

\usepackage{url}
\usepackage{xspace}
\usepackage[ngerman]{babel}
\usepackage[utf8]{inputenc}


\begin{document}


\textbf{\Huge Expos\'{e} zur Studienarbeit:\\\Large Inter-instance constraints in Workflow-Management Systemen}

\section{Hintergrund}

Um Mitarbeitern in einem Unternehmen Aufgaben zuzuteilen, die zu bearbeiten sind, wird in gängigen Workflow-Management-Systemen (WfMS) eine Nutzer-basierte (User Based Access Control - UBAC) bzw. eine Rollen-basierte (Role Based Access Control - RBAC) Zugangskontrolle verwendet. Bei der RBAC werden die Nutzer in Rollen (zB Verkäufer, Manager) unterteilt, und bekommen entsprechend ihren Rollen Aufgaben zugewiesen. Welcher Mitarbeiter aus der Rolle die Aufgabe (Task) letztendlich erfüllt, hängt davon ab, welcher Mitarbeiter diese Aufgabe als Erster akzeptiert.

Diese auf Berechtigung basierte Kontrolle kann allerdings schwer einen Betrug verhindern, bzw würde sehr schnell unübersichtlich werden. So möchte man bei einem Dokument, das von zwei unabhängigen Mitarbeitern geprüft werden muss, verhindern, dass diese z.B. in einem verwandschaftlichen Verhältnis zueinander stehen.
Um das sicherzustellen, müssten alle Mitarbeiter, die ein persönliches Verhältnis zueinander haben, unterschiedlichen Rollen zugewiesen werden. Das kann bei einem großen Unternehmen sehr unübersichtlich werden.

Ein anderes Szenario, welches das auf Berechtigungen basierte System nicht berücksichtigt, ist der Wunsch, Betrug in einer Bank zu verhindern, in dem ein Mitarbeiter daran gehindert wird, innerhalb eines kurzen Zeitraums hohe Summen in Form eines Kredits mehrmals an den selben Kunden auszuzahlen. Um eine Übersicht über die bereits ausgezahlte Summe zu behalten, ist es nötig, den Verlauf der vorhergehenden Tasks in die Entscheidung mit einzubeziehen. Auch hier kann die RBAC nicht weiterhelfen, da die Berechtigungen im herkömmlichen System für jede Instanz eines Kreditprozesses unabhängig voneinander gilt.

\section{Verwandte Arbeit}

\section{Ziel der Arbeit}

Ziel der Arbeit ist es, das auf Berechtigungen basierte System um ein System zu erweitern, welches Einschränkungen in Abhängigkeit von bereits erfüllten Aufgaben (auch zwischen mehreren Instanzen) erlaubt. Dabei muss es folgende Kriterien erfüllen:\\
- statische Einschränkungen, welche Kombinationen von Mitarbeitern abhängig von Tasks, Rollen und internen Parametern (ausgezahlter Betrag) innerhalb einer Instanz verhindern (Wenn A und B verwandt sind, dürfen sie nicht an dem selben Prozess arbeiten).\\
- Dynamische Einschränkungen, die vorher ausgeführte Instanzen mit einbeziehen, ebenfalls mit Bezug auf Tasks, Rollen und der Akkumulation von internen Paramtern (z.B. die Summe der ausgezahlten Beträge).\\

Die Implementierung der Definitionssprache der Einschränkungen erfolgt mittels ANTLR, einem Parser-Generator für domaänenspezifische Sprachen \cite{parr_definitve_2007}.

\section{Evaluation}

Als Evaluation der implementierten Einschränkungen werden MXML-Logs des WfMS ??"jawl"?? mit dem Parser SEVOL in eine eigene Datenstruktur umgewandelt. Anhand geeigneter Testfälle werden die Möglichkeiten und Grenzen der Enschränkungen untersucht.

?? Weiterhin wird geprüft, inwiefern Einschränkungen dazu führen können, dass ein Prozess nicht beendet werden kann,
das heißt, ob es Kombinationen von Einschränkungen gibt, die niemals erfüllt werden können.

\section{Literatur}
\bibliographystyle{plain}
\bibliography{MyLibrary}
\end{document}
